/**
  * The source code in this file is the property of
  * Ripple Systems and is not for redistribution
  * in any form.
  *
  * Source:   $File: //depot/4669_T01271350/TA_BASE/transactive/core/process_management/IDL/src/ISystemControllerAdminCorbaDef.idl $
  * @author:  Justin Ebedes
  * @version: $Revision: #2 $
  *
  * Last modification: $DateTime: 2010/02/25 18:45:54 $
  * Last modified by:  $Author: builder $
  *
  * Interface used by the System Manager to communicate
  * with a System Controller.
  *
  */


#ifndef ISYSTEMCONTROLLERADMINCORBADEF_IDL_INCLUDED
#define ISYSTEMCONTROLLERADMINCORBADEF_IDL_INCLUDED

#include "core/process_management/IDL/src/ProcessManagementDataDefinitionsCorbaDef.idl"

module TA_Base_Core
{
        interface ISystemControllerAdminCorbaDef
        {       

			exception ModeChangeException  
 			{
				string reason;
			};  

			/**
              * getProcessData
              *
              * Get a sequence with all the known processes for a System Controller
              */
            ProcessDataSeq getProcessData();

            /**
              * shutdown
              *
              * Shutdown a System Controller. The Process Monitors should sort out 
			  * between themselves how to run the processes that get dropped.
              */
            void shutdown(in string hostname);

            /**
              * startProcess
              *
              * Start a process.
			  * 
              */
            void startProcess(in string entityName);

            /**
              * changeAgentOperationMode
              *
              * Ask a System Controller to change the Operation mode of one of its
              * managed processes.
              * 
			  * @exception ModeChangeException  Raised if the agent's operation mode
			  *								    cannot be changed.
              */
            void changeAgentOperationMode( in string entityName, 
                                           in EOperationMode operationMode) 
				raises (ModeChangeException);

            /**
              * stopProcess
			  *
			  * Stop a process.
              * 
              */
            void stopProcess(in string entityName);

            /**
              * setRunParam
              *
              * Set a RunParam for a particular process
			  * 
              */
            void setRunParam(in string entityName, in TA_Base_Core::RunParam param);

			/**
			  * Returns the status of the agents running on this System Controller.
			  *
			  * @return AgentStatusEnum  An enum indiciating the overall status
			  *							 of the agents.
			  *
			  */
			AgentStatusEnum getAgentsStatus();

            void deployProcesses( in EOperationMode normalOperationMode, in boolean isStart ); // limin++ CL-21243
        };
};

#endif // ISYSTEMCONTROLLERADMINCORBADEF_IDL_INCLUDED
