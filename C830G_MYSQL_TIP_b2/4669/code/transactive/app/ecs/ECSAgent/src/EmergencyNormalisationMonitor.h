/**
  * The source code in this file is the property of
  * Ripple Systems and is not for redistribution
  * in any form.
  *
  * Source:   $File: //depot/4669_T01271350/4669/transactive/app/ecs/ECSAgent/src/EmergencyNormalisationMonitor.h $
  * @author:  Ripple
  * @version: $Revision: #1 $
  *
  * Last modification: $DateTime: 2008/11/28 16:26:01 $
  * Last modified by:  $Author: builder $
  *
  */
///////////////////////////////////////////////////////////
//
//  EmergencyNormalisationMonitor.h
//  Implementation of the Class EmergencyNormalisationMonitor
//  Generated by Enterprise Architect
//  Created on:      25-Sep-2003 18:53:34
//  Original author: 
//  
///////////////////////////////////////////////////////////
//  Modification history:
//  
//
///////////////////////////////////////////////////////////


#if !defined(EmergencyNormalisationMonitor__INCLUDED_)
#define EmergencyNormalisationMonitor__INCLUDED_

#include "app/ecs/ECSAgent/src/AbstractFailoverable.h"
#include "app/ecs/ECSAgent/src/ItaEcsDatapoints.h"

class ItaEcsAlarms;


class EmergencyNormalisationMonitor : public virtual AbstractFailoverable,
                                      public virtual IEmergencyObserver
{

public:
    EmergencyNormalisationMonitor(
		ItaEcsDatapoints& theDatapoints,
		ItaEcsAlarms& theAlarms);

    virtual ~EmergencyNormalisationMonitor();

    virtual void processEmergencyUpdate(unsigned long zoneId, bool value);


private:
    
    ItaEcsDatapoints&       m_theDatapoints;
	ItaEcsAlarms&			m_theAlarms;

private:
    EmergencyNormalisationMonitor( const EmergencyNormalisationMonitor& theEmergencyNormalisationMonitor);
    EmergencyNormalisationMonitor();

};

#endif // !defined(EmergencyNormalisationMonitor__INCLUDED_)
