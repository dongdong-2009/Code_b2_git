/**
  * The source code in this file is the property of
  * Ripple Systems and is not for redistribution
  * in any form.
  *
  * Source:   $File: //depot/4669_T01271350/4669/transactive/app/pa/PAAgent/src/FireCountdownAckMonitor.h $
  * @author:  Ripple
  * @version: $Revision: #2 $
  *
  * Last modification: $DateTime: 2009/01/08 14:06:20 $
  * Last modified by:  $Author: builder $
  *
  */
///////////////////////////////////////////////////////////
//
//  FireCountdownAckMonitor.h
//  Implementation of the Class FireCountdownAckMonitor
//  Generated by Enterprise Architect
//  Created on:      25-Sep-2003 18:53:34
//  Original author: 
//  
///////////////////////////////////////////////////////////
//  Modification history:
//  
//
///////////////////////////////////////////////////////////


#if !defined(FireCountdownAckMonitor__INCLUDED_)
#define FireCountdownAckMonitor__INCLUDED_

#include "core/threads/src/Thread.h"
#include "bus/scada/proxy_library/src/ScadaProxyFactory.h"
#include "bus/scada/proxy_library/src/IDataPointProxy.h"
#include "bus/scada/proxy_library/src/DataPointProxySmartPtr.h"
#include "bus/scada/proxy_library/src/IEntityUpdateEventProcessor.h"

namespace TA_IRS_App{

class Table570;

class FireCountdownAckMonitor : public virtual TA_Base_Bus::IEntityUpdateEventProcessor
{

public:
    FireCountdownAckMonitor(Table570& table570);

    virtual ~FireCountdownAckMonitor();

    void setControl(bool isOnStartup=false);
    void setMonitor(bool isOnStartup=false);

    // Implementation of IEntityUpdateEventProcessor
	void processEntityUpdateEvent(unsigned long entityKey, TA_Base_Bus::ScadaEntityUpdateType updateType);

private:

    TA_Base_Bus::ScadaProxyFactory&			        m_proxyFactory;
    TA_Base_Bus::DataPointProxySmartPtr            m_fireCountdownProxy;
    bool                                            m_isAlarmAcked;

    TA_Base_Core::NonReEntrantThreadLockable     m_lock;
    /** The reference to Table 570 to reset fire alarm announcements. */
    Table570& m_table570;
    volatile bool m_isEnabled;

private:
    FireCountdownAckMonitor( const FireCountdownAckMonitor& theFireCountdownAckMonitor);
    FireCountdownAckMonitor();

};

};

#endif // !defined(FireCountdownAckMonitor__INCLUDED_)
