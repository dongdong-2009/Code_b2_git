//
// The source code in this file is the property of
// Ripple Systems and is not for redistribution
// in any form.
//
// Source:   $File: //depot/GZL6_TIP/3002/transactive/bus/ats/ats_agent/IDL/src/IAtsTrainCorbaDef.idl $
// @author:  Andy Parker
// @version: $Revision: #1 $
//
// Last modification: $DateTime: 2012/06/12 13:35:44 $
// Last modified by:  $Author: builder $
//
// IAtsTrainCorbaDef interface definition for the ATS/Train Agent interfacing. 
//
#include "bus/ats/ats_agent/IDL/src/AtsCommonCorbaDef.idl"

module TA_IRS_Bus
{
	interface IAtsTrainCorbaDef
	{
		struct LocalisationData   
		{		
			boolean					localisationValid;

			string					physicalTrainService;	// Physical Train Number/service e.g. 45/123

			StationIdType			currentLocation;		// Station or depot entity key
			StationIdType			lastLocation;			// Station or depot entity key
			CctvZoneIdType			currentCctvZone;		// CCTV Zone ID
			EDirection				upDirection;			// direction of train travel
			ETrack					track;					// Track - innerbound or outerbound

			boolean					isMute;					// isTalkative flag from ATS
			string                  TrainTrackLocation;
			unsigned short          TrainCongestion;        //Train Congestion Status: 0=Congestion/1=Not Congestion/2=Invalid Value 
		};

		//
		// This structure is used to provide notifications of change to the Train Agent 
		// through the 'any messageState' member of the TA_Core::CommsMessageCorbaDef.
		//
		struct AtsTrainMessageCorbaDef   
		{
			string           	   physicalTrainNumber;	// Physical Train number

			boolean					trainValid;				// Validity of the data - train does not exist
															//						  if this is false
		
			LocalisationData		localisation;			// Localisation data - may or may not be valid
		};

		//
		// A sequence of AtsTrainMessageCorbaDef defined for getTrainInformationList
		//
		typedef sequence<AtsTrainMessageCorbaDef>	TrainInfoList;

		//
		// An unbounded octet sequence
		// Used in sendOa1TableToAts and sendAtcAlarmTableToAts
		//
		typedef sequence<octet>						OctetSequence;

		/**
          * getTrainInformationList
          *
          * This method is used to access the full list of Train information
		  * and will typlically used to synchronise at startup of the client
		  * application
          *
		  * @return A sequence of AtsTrainMessageCorbaDef for all platforms known
		  *			to the ATS agent.
          */
		TrainInfoList getTrainInformationList()
			raises (TA_Base_Core::OperationModeException, TA_Base_Core::NotAvailableException);
		
	}; // IAtsTrainCorbaDef
}; // TA_Bus
