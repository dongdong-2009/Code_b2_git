/**
  * The source code in this file is the property of
  * Ripple Systems and is not for redistribution
  * in any form.
  *
  * Source:   $File: //depot/4669_T01271350/4669/transactive/app/radio/RadioTetraAgent/RadioProtocolLibrary/src/RadioMethodConvertToDBTime.cpp $
  * @author:  Nick Jardine
  * @version: $Revision: #1 $
  *
  * Last modification: $DateTime: 2008/11/28 16:26:01 $
  * Last modified by:  $Author: builder $
  *
  * Implementation for radio Delete Reference API call
  *
  */
///////////////////////////////////////////////////////////
//
//  RadioMethodConvertToDBTime.cpp
//  Implementation of the Class RadioMethodConvertToDBTime
//  Generated by Enterprise Architect
//  Created on:      10-Nov-2003 15:15:18
//  Original author: 
//  
///////////////////////////////////////////////////////////
//  Modification history:
//  
//
///////////////////////////////////////////////////////////

#include <ctime>

#include "RadioMethodConvertToDBTime.h"
#include "RadioProtocol.h"
#include "core/utilities/src/TAAssert.h"

#include "ace/OS.h"



namespace TA_IRS_App
{


    const unsigned int RadioMethodConvertToDBTime::CONVERT_TO_DB_TIME_METHOD_LENGTH   = 23;
    const unsigned int RadioMethodConvertToDBTime::DATETIME_PARAMETER_START_POSITION  =  0;

    /**
    * Constructor
    * @param    sessionRef
    */
    RadioMethodConvertToDBTime::RadioMethodConvertToDBTime(RadioSessionReference sessionRef,const time_t inputTime) 
                            : RadioMethod(CONVERT_TO_DB_TIME_METHOD_LENGTH,METHOD_CONVERT_TO_DB_TIME,sessionRef)
    {
	    FUNCTION_ENTRY("Constructor");
        
		char timestr[50] = {0};

        // Need to convert the time_t to the correct string representation, which is:
        // mm/dd/yyyy hh:mm:ss
        tm timeStruct;
        ACE_OS::localtime_r(&inputTime, &timeStruct);
        //std::stringstream timeString;

        //timeString << (timeStruct->tm_mon + 1) << "/" << (timeStruct->tm_mday) << "/" << (timeStruct->tm_year + 1900)
        //    << " " << timeStruct->tm_hour << ":" << (timeStruct->tm_min + 1) << ":" << (timeStruct->tm_sec + 1);

// 		sprintf(timestr,"%02d/%02d/%04d %02d:%02d:%02d\0",(timeStruct.tm_mon+1), // tm_mon range is 0..11
// 			                                              timeStruct.tm_mday,
// 														 (timeStruct.tm_year + 1900),
// 														  timeStruct.tm_hour,
// 														  timeStruct.tm_min ,
// 														  timeStruct.tm_sec );
        strftime(timestr, 50, "%m/%d/%Y %H:%M:%S", &timeStruct);


        // And add this string to the method
        //setParameterLongString(DATETIME_PARAMETER_START_POSITION,timeString.str());
        setParameterLongString(DATETIME_PARAMETER_START_POSITION,timestr);
	    FUNCTION_EXIT;
    }

    RadioMethodConvertToDBTime::~RadioMethodConvertToDBTime()
    {
    }


}
