/**
  * The source code in this file is the property of
  * Ripple Systems and is not for redistribution
  * in any form.
  *
  * Source:   $File: //depot/4669_T01271350/4669/transactive/app/radio/RadioTetraAgent/RadioProtocolLibrary/src/Text2SubscriberReferenceEventReader.cpp $
  * @author:  Ripple
  * @version: $Revision: #1 $
  *
  * Last modification: $DateTime: 2008/11/28 16:26:01 $
  * Last modified by:  $Author: builder $
  *
  */
///////////////////////////////////////////////////////////
//
//  Text2SubscriberReferenceEventReader.cpp
//  Implementation of the Class Text2SubscriberReferenceEventReader
//  Generated by Enterprise Architect
//  Created on:      10-Nov-2003 16:38:14
//  Original author: 
//  
///////////////////////////////////////////////////////////
//  Modification history:
//  
//
///////////////////////////////////////////////////////////

#include "Text2SubscriberReferenceEventReader.h"
#include "core/utilities/src/TAAssert.h"

namespace TA_IRS_App
{

    const unsigned int Text2SubscriberReferenceEventReader::TEXT_2_SUBSCRIBER_REFERENCE_EVENT_LENGTH  = 36;
    const unsigned int Text2SubscriberReferenceEventReader::TEXT_REFERENCE_PARAMETER_START_POSITION   =  0;
    const unsigned int Text2SubscriberReferenceEventReader::SUBSCRIBER_REFERENCE_PARAMETER_POSITION   = 32;


    Text2SubscriberReferenceEventReader::Text2SubscriberReferenceEventReader(RadioEvent& event)
						    : RadioEventReader(event,EVENT_TEXT_2SR,TEXT_2_SUBSCRIBER_REFERENCE_EVENT_LENGTH)
    {
    }

    Text2SubscriberReferenceEventReader::~Text2SubscriberReferenceEventReader()
    {
    }


    const std::string Text2SubscriberReferenceEventReader::getTextReference() const
    {
	    return getParameterShortString(TEXT_REFERENCE_PARAMETER_START_POSITION);
    }

    const Text2SubscriberReferenceEventReader::RadioReference 
        Text2SubscriberReferenceEventReader::getSubscriberReference() const
    {
        return getParameterLong(SUBSCRIBER_REFERENCE_PARAMETER_POSITION);
    }
}


