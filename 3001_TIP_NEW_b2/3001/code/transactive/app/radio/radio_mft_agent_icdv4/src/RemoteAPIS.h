// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v1.8
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:519

#ifndef _TAO_IDL_REMOTEAPIS_WMQEWI_H_
#define _TAO_IDL_REMOTEAPIS_WMQEWI_H_


#include "RemoteAPIC.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/Collocation_Proxy_Broker.h"
#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// e:\ace+tao-5.8.0\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_sh.cpp:41

namespace POA_MCC7500SDK
{
  
  
  // TAO_IDL - Generated from
  // e:\ace+tao-5.8.0\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_sh.cpp:78
  
  class IAPIResponse;
  typedef IAPIResponse *IAPIResponse_ptr;
  
  class  IAPIResponse
    : public virtual PortableServer::ServantBase
  {
  protected:
    IAPIResponse (void);
  
  public:
    // Useful for template programming.
    typedef ::MCC7500SDK::IAPIResponse _stub_type;
    typedef ::MCC7500SDK::IAPIResponse_ptr _stub_ptr_type;
    typedef ::MCC7500SDK::IAPIResponse_var _stub_var_type;
    
    IAPIResponse (const IAPIResponse& rhs);
    virtual ~IAPIResponse (void);
    
    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);
    
    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _repository_id_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall);
    
    ::MCC7500SDK::IAPIResponse *_this (void);
    
    virtual const char* _interface_repository_id (void) const;
    
    // TAO_IDL - Generated from
    // e:\ace+tao-5.8.0\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41
    
    virtual void CallBack (
      const ::MCC7500SDK::Parameters & Message) = 0;
    
    static void CallBack_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);
  };
  
  // TAO_IDL - Generated from
  // e:\ace+tao-5.8.0\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_sh.cpp:78
  
  class IAPIRequestServer;
  typedef IAPIRequestServer *IAPIRequestServer_ptr;
  
  class  IAPIRequestServer
    : public virtual PortableServer::ServantBase
  {
  protected:
    IAPIRequestServer (void);
  
  public:
    // Useful for template programming.
    typedef ::MCC7500SDK::IAPIRequestServer _stub_type;
    typedef ::MCC7500SDK::IAPIRequestServer_ptr _stub_ptr_type;
    typedef ::MCC7500SDK::IAPIRequestServer_var _stub_var_type;
    
    IAPIRequestServer (const IAPIRequestServer& rhs);
    virtual ~IAPIRequestServer (void);
    
    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);
    
    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _repository_id_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall);
    
    ::MCC7500SDK::IAPIRequestServer *_this (void);
    
    virtual const char* _interface_repository_id (void) const;
    
    // TAO_IDL - Generated from
    // e:\ace+tao-5.8.0\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41
    
    virtual ::MCC7500SDK::Version ServerVersion (void) = 0;
    
    static void _get_ServerVersion_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);
    
    // TAO_IDL - Generated from
    // e:\ace+tao-5.8.0\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41
    
    virtual ::MCC7500SDK::BYTE RegisterApp (
      ::MCC7500SDK::IAPIResponse_ptr ClientCallback) = 0;
    
    static void RegisterApp_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);
    
    // TAO_IDL - Generated from
    // e:\ace+tao-5.8.0\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41
    
    virtual ::MCC7500SDK::BOOL DeregisterApp (
      ::MCC7500SDK::BYTE clientId) = 0;
    
    static void DeregisterApp_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);
    
    // TAO_IDL - Generated from
    // e:\ace+tao-5.8.0\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41
    
    virtual ::MCC7500SDK::BOOL AuthenticateUser (
      const ::CORBA::WChar * UserName,
      const ::CORBA::WChar * Password,
      ::MCC7500SDK::BYTE ClientID,
      const ::CORBA::WChar * UserID) = 0;
    
    static void AuthenticateUser_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);
    
    // TAO_IDL - Generated from
    // e:\ace+tao-5.8.0\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41
    
    virtual ::MCC7500SDK::IBaseAPIRequest_ptr GetAPIRequest (
      ::MCC7500SDK::BYTE ClientID,
      const ::MCC7500SDK::Version & ClientRequestedVersion) = 0;
    
    static void GetAPIRequest_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);
  };
  
  // TAO_IDL - Generated from
  // e:\ace+tao-5.8.0\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_sh.cpp:78
  
  class IBaseAPIRequest;
  typedef IBaseAPIRequest *IBaseAPIRequest_ptr;
  
  class  IBaseAPIRequest
    : public virtual PortableServer::ServantBase
  {
  protected:
    IBaseAPIRequest (void);
  
  public:
    // Useful for template programming.
    typedef ::MCC7500SDK::IBaseAPIRequest _stub_type;
    typedef ::MCC7500SDK::IBaseAPIRequest_ptr _stub_ptr_type;
    typedef ::MCC7500SDK::IBaseAPIRequest_var _stub_var_type;
    
    IBaseAPIRequest (const IBaseAPIRequest& rhs);
    virtual ~IBaseAPIRequest (void);
    
    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);
    
    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _repository_id_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall);
    
    ::MCC7500SDK::IBaseAPIRequest *_this (void);
    
    virtual const char* _interface_repository_id (void) const;
    
    // TAO_IDL - Generated from
    // e:\ace+tao-5.8.0\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41
    
    virtual ::MCC7500SDK::Version Ver (void) = 0;
    
    static void _get_Ver_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);
  };
  
  // TAO_IDL - Generated from
  // e:\ace+tao-5.8.0\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_sh.cpp:78
  
  class IAPIRequest;
  typedef IAPIRequest *IAPIRequest_ptr;
  
  class  IAPIRequest
    : public virtual POA_MCC7500SDK::IBaseAPIRequest
  {
  protected:
    IAPIRequest (void);
  
  public:
    // Useful for template programming.
    typedef ::MCC7500SDK::IAPIRequest _stub_type;
    typedef ::MCC7500SDK::IAPIRequest_ptr _stub_ptr_type;
    typedef ::MCC7500SDK::IAPIRequest_var _stub_var_type;
    
    IAPIRequest (const IAPIRequest& rhs);
    virtual ~IAPIRequest (void);
    
    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);
    
    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _repository_id_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall);
    
    ::MCC7500SDK::IAPIRequest *_this (void);
    
    virtual const char* _interface_repository_id (void) const;
    
    // TAO_IDL - Generated from
    // e:\ace+tao-5.8.0\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41
    
    virtual void ApiRequest (
      ::MCC7500SDK::METHOD_ID methodId,
      const ::MCC7500SDK::Parameters & paramListIn,
      ::MCC7500SDK::Parameters_out paramListOut,
      ::MCC7500SDK::UVariant_out returnValue) = 0;
    
    static void ApiRequest_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);
    
    static void
    _get_Ver_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);
  };
  
  // TAO_IDL - Generated from
  // e:\ace+tao-5.8.0\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_sh.cpp:78
  
  class IAPIRequest2;
  typedef IAPIRequest2 *IAPIRequest2_ptr;
  
  class  IAPIRequest2
    : public virtual POA_MCC7500SDK::IAPIRequest
  {
  protected:
    IAPIRequest2 (void);
  
  public:
    // Useful for template programming.
    typedef ::MCC7500SDK::IAPIRequest2 _stub_type;
    typedef ::MCC7500SDK::IAPIRequest2_ptr _stub_ptr_type;
    typedef ::MCC7500SDK::IAPIRequest2_var _stub_var_type;
    
    IAPIRequest2 (const IAPIRequest2& rhs);
    virtual ~IAPIRequest2 (void);
    
    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);
    
    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _repository_id_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall);
    
    ::MCC7500SDK::IAPIRequest2 *_this (void);
    
    virtual const char* _interface_repository_id (void) const;
    
    // TAO_IDL - Generated from
    // e:\ace+tao-5.8.0\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41
    
    virtual void FilterAPIResponse (
      const ::MCC7500SDK::ResponseIDs & msgResponseIDs) = 0;
    
    static void FilterAPIResponse_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);
    
    // TAO_IDL - Generated from
    // e:\ace+tao-5.8.0\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41
    
    virtual void UnfilterAPIResponse (
      const ::MCC7500SDK::ResponseIDs & msgResponseIDs) = 0;
    
    static void UnfilterAPIResponse_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);
    
    // TAO_IDL - Generated from
    // e:\ace+tao-5.8.0\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41
    
    virtual void UnfilterAllAPIResponses (void) = 0;
    
    static void UnfilterAllAPIResponses_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);
    
    // TAO_IDL - Generated from
    // e:\ace+tao-5.8.0\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:41
    
    virtual void GetFilteredAPIResponses (
      ::MCC7500SDK::ResponseIDs_out msgResponseIDs) = 0;
    
    static void GetFilteredAPIResponses_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);
    
    static void
    _get_Ver_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);
    
    // TAO_IDL - Generated from
    // .\be\be_interface.cpp:2224
    
    static void
    ApiRequest_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant);
  };

// TAO_IDL - Generated from
// e:\ace+tao-5.8.0\ace_wrappers\tao\tao_idl\be\be_visitor_module/module_sh.cpp:72

} // module MCC7500SDK

// TAO_IDL - Generated from 
// .\be\be_codegen.cpp:1726


#if defined (__ACE_INLINE__)
#include "RemoteAPIS.inl"
#endif /* defined INLINE */

#endif /* ifndef */

