import path "class" print option os ta-os ta-version ;
using gcc ;

path-constant 	TOP				: . ;
path-constant 	COTS			: . ;
constant		TA_OS			: [ class.new ta-os-class ] ;
constant		IDENTIFIER		: [ $(TA_OS).identifier ] ;
constant		CONFIG_GUESS	: [ $(TA_OS).config-guess ] ;
constant		JOBS			: [ $(TA_OS).processor-numbers ] ;
constant		OS_NAME			: [ $(TA_OS).name ] ;
constant		OS_TYPE			: [ $(TA_OS).type ] ;

rule check-build ( prefix ? )
{
	local m = [ CALLER_MODULE ] ;
	prefix ?= [ modules.peek $(m) : PREFIX ] ;
	if [ path.exists $(prefix) ]
	{
		if ! [ option.get "force" : : true ]
		{
			return true ;
		}
	}
}
